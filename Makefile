# Packages
PACKAGES := x11 xcb xcb-randr xcb-icccm xcb-keysyms xcb-event xcb-render freetype2 fontconfig

# Packages only used within tests and not the end build
TEST_PACKAGES := xcb-errors

# Compiler flags
DEBUG_FLAGS := -DDEBUG -g -fsanitize=address -pg
C_FLAGS := -Iinclude -std=c99 $(shell pkg-config --cflags $(PACKAGES)) -Wall -Wextra -Wpedantic -Werror -Wno-format-zero-length
RELEASE_FLAGS := -O3

# Libraries
C_LIBS := $(shell pkg-config --libs $(PACKAGES))

# Input
SRC := src

# Output
RUN := fensterchef
BUILD := build
RELEASE := release

# Find all source files
SOURCES := $(shell find $(SRC) -name '*.c')
# Get all corresponding object paths
OBJECTS := $(patsubst $(SRC)/%.c,$(BUILD)/%.o,$(SOURCES))

# Find all test sources
TEST_SOURCES := $(shell find tests -name '*.c')
# Get the corresponding output binaries
TESTS := $(patsubst tests/%.c,$(BUILD)/tests/%,$(TEST_SOURCES))
# All objects but the main object
OBJECTS_WITHOUT_MAIN := $(filter-out $(BUILD)/main.o,$(OBJECTS))
# Get the corresponding depency files
TEST_DEPENDENCIES := $(patsubst %,%.d,$(TESTS))

# Get dependencies
DEPENDENCIES := $(patsubst %.o,%.d,$(OBJECTS))

# Sandbox parameters
SANDBOX_DISPLAY := 8
SANDBOX := Xephyr :$(SANDBOX_DISPLAY) +extension RANDR -br -ac -noreset -screen 800x600

.PHONY: default
default: build tests

# Include dependencies (.d files) generated by gcc
-include $(DEPENDENCIES)
# Build each object from corresponding source file
$(BUILD)/%.o: $(SRC)/%.c
	mkdir -p $(dir $@)
	gcc $(DEBUG_FLAGS) $(C_FLAGS) -c $< -o $@ -MMD

# Build the main executable from all object files
$(BUILD)/$(RUN): $(OBJECTS)
	mkdir -p $(dir $@)
	gcc $(DEBUG_FLAGS) $(C_FLAGS) $(OBJECTS) -o $@ $(C_LIBS)

# Tests
.PHONY: tests

# Include dependencies (.d files) generated by gcc
-include $(TEST_DEPENDENCIES)
# Build the test objects
$(BUILD)/tests/%.o: tests/%.c
	mkdir -p $(dir $@)
	gcc $(DEBUG_FLAGS) $(shell pkg-config --cflags $(TEST_PACKAGES)) $(C_FLAGS) -c $< -o $@ -MMD

# Build the test executables
$(BUILD)/tests/%: $(BUILD)/tests/%.o $(OBJECTS_WITHOUT_MAIN)
	gcc $(DEBUG_FLAGS) $(C_FLAGS) $(OBJECTS_WITHOUT_MAIN) $< -o $@ $(C_LIBS) $(shell pkg-config --libs $(TEST_PACKAGES))

tests: $(TESTS)

# Functions
.PHONY: build sandbox stop release clean

build: $(BUILD)/$(RUN)

sandbox: build
	$(SANDBOX) &
	# wait for x server to start
	sleep 1
	DISPLAY=:$(SANDBOX_DISPLAY) gdb -ex run ./$(BUILD)/$(RUN)

stop:
	pkill Xephyr

release:
	mkdir -p $(RELEASE)
	gcc $(RELEASE_FLAGS) $(C_FLAGS) $(SOURCES) -o $(RELEASE)/$(RUN) $(C_LIBS)

clean:
	rm -rf $(BUILD)
	rm -rf $(RELEASE)
